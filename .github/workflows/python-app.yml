name: Python application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pip install pytest pytest-cov
    #     pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      steps:
        - name: Check out the repo
          uses: actions/checkout@v4
  
        - name: Log in to Docker Hub
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
  
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: tf7a/harpy
            
        - name: Clone Repo
          run: |
            git config user.name "DictateurBienveillant"
            git config user.email "cedric.trottier@monboreal.ca"
            gh repo clone PotatEnjoyerOfTomboys/Harpy
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN_FORGIT }}            

        - name: Set image tag variable
          id: set_tag
          run: |
            IMAGE_TAG=$(date +'%Y%m%d%H%M%S')  # You can use any method to generate the tag, e.g., version from a tag
            echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        
        - name: Modify YAML using yq
          run: |
            cd guestbook
            ls
            #yq eval '.spec.template.spec.containers.image = "tf7a/harpy:${{ env.TAG_NAME }}"' deployment.yaml && cat deployment.yaml
            sed -i 's|image: tf7a/harpy:*|image: tf7a/harpy:${{ env.IMAGE_TAG }}|' deployment.yaml
  
        - name: Commit and push changes
          run: |
            git config user.name "DictateurBienveillant"
            git config user.email "cedric.trottier@monboreal.ca"
            git add guestbook/deployment.yaml
            git commit -m "Update YAML file using sed"
            echo "line 87"
            git push -u origin main
            echo "line 90"
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN_FORGIT }}
  
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          with:
            context: .
            file: ./Dockerfile
            push: true
            # tags: ${{ steps.meta.outputs.tags }}
            tags: ${{ env.TAG_NAME }}
            labels: ${{ steps.meta.outputs.labels }}
  
        # - name: Generate artifact attestation
        #   uses: actions/attest-build-provenance@v1
        #   with:
        #     # subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        #     subject-name: tf7a/harpy
        #     subject-digest: ${{ steps.push.outputs.digest }}
        #     push-to-registry: true
